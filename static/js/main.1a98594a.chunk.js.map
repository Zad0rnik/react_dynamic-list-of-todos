{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","json","reject","Error","status","statusText","TodoList","todos","onModalOpen","isModalOpen","selectedModalId","className","map","todo","id","title","completed","cn","type","onClick","TodoFilter","sortingStatus","onSelectChange","setSearchValue","useState","query","setQuery","isReset","setIsReset","value","onChange","placeholder","event","target","style","pointerEvents","Loader","TodoModal","onClose","user","setUser","isLoading","setIsLoading","errorStatus","setErrorStatus","useEffect","userId","data","catch","error","message","href","name","App","setTodos","setIsModalOpen","setSelectedModalId","setSortingStatus","searchValue","visibleTodos","useMemo","filter","length","toLowerCase","includes","trim","openModal","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a98594a.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => (res.ok\n      ? res.json()\n      : Promise.reject(\n        new Error(`Cannot load data: ${res.status} ${res.statusText}`),\n      )));\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onModalOpen: (id: number) => void;\n  isModalOpen: boolean;\n  selectedModalId: number;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onModalOpen,\n  isModalOpen,\n  selectedModalId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr data-cy=\"todo\" className=\"\" key={id}>\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered\">\n              <p className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onModalOpen(id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn({\n                      'far fa-eye': !isModalOpen || selectedModalId !== id,\n                      'far fa-eye-slash': isModalOpen && selectedModalId === id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, { useState } from 'react';\n\ninterface Props {\n  sortingStatus: string;\n  onSelectChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  setSearchValue: (value: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  sortingStatus,\n  onSelectChange,\n  setSearchValue,\n}) => {\n  const [query, setQuery] = useState<string>('');\n  const [isReset, setIsReset] = useState<boolean>(false);\n\n  const handleChanges = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setSearchValue(value);\n    setIsReset(!!value);\n  };\n\n  const handleReset = () => {\n    setQuery('');\n    setSearchValue('');\n    setIsReset(false);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={sortingStatus}\n            onChange={onSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChanges}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {isReset && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleReset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorStatus, setErrorStatus] = useState('');\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then((data) => {\n        setUser(data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setErrorStatus(error.message);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              {errorStatus ? (\n                <strong className=\"has-text-danger\">\n                  {errorStatus}\n                </strong>\n              ) : (\n                <a href={`mailto:${user?.name}`}>\n                  {user?.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorStatus, setErrorStatus] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedModalId, setSelectedModalId] = useState(0);\n  const [sortingStatus, setSortingStatus] = useState('all');\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then((data) => {\n        setTodos(data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setErrorStatus(error.message);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const handleModalOpen = (id: number) => {\n    setIsModalOpen(true);\n    setSelectedModalId(id);\n  };\n\n  const handleSortingStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortingStatus(event.target.value);\n  };\n\n  const getVisibleTodos = () => {\n    let visibleTodos = [...todos];\n\n    if (sortingStatus === 'active') {\n      visibleTodos = visibleTodos.filter((todo) => !todo.completed);\n    }\n\n    if (sortingStatus === 'completed') {\n      visibleTodos = visibleTodos.filter((todo) => todo.completed);\n    }\n\n    if (searchValue.length > 0) {\n      visibleTodos = visibleTodos\n        .filter((todo) => todo.title\n          .toLowerCase()\n          .includes(searchValue.toLowerCase().trim()));\n    }\n\n    return visibleTodos;\n  };\n\n  const visibleTodos = useMemo(getVisibleTodos, [todos, sortingStatus, searchValue]);\n  const openModal = useMemo(() => {\n    return todos.find((todo) => todo.id === selectedModalId);\n  }, [todos, selectedModalId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                sortingStatus={sortingStatus}\n                onSelectChange={handleSortingStatus}\n                setSearchValue={setSearchValue}\n              />\n            </div>\n\n            {isLoading && (\n              <div className=\"block\">\n                <Loader />\n              </div>\n            )}\n\n            {errorStatus && !isLoading && (\n              <p>There is nothing to show, please add todo</p>\n            )}\n\n            {!errorStatus && !isLoading && (\n              <div className=\"block\">\n                <TodoList\n                  todos={visibleTodos}\n                  onModalOpen={handleModalOpen}\n                  isModalOpen={isModalOpen}\n                  selectedModalId={selectedModalId}\n                />\n              </div>\n            )}\n\n          </div>\n        </div>\n      </div>\n      {isModalOpen && openModal && (\n        <TodoModal\n          todo={openModal}\n          onClose={() => setIsModalOpen(false)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}